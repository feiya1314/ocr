server {
        listen       80;
        listen       [::]:80;
        server_name  www.easyocr.cn easyocr.cn;
        root         /home/ocr/ocr-web;
        
        access_log /home/ocr/nginx/log/ocr-nginx-access.log main;
        error_log /home/ocr/nginx/log/ocr-nginx-error.log;
        
        gzip on;
        gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css image/svg+xml;
        # 启用后，nginx首先检查是否存在请求静态文件的gz结尾的文件，如果有则直接返回该gz文件内容。为了要兼容不支持gzip的浏览器，启用gzip_static模块就必须同时保留原始静态文件和gz文件
        gzip_static on;
        
        location = /robots.txt {
            alias /home/ocr/ocr-web/robots.txt;
        }

        location = /sitemap.xml {
            alias /home/ocr/ocr-web/sitemap.xml;
        }

        location / {
            return 301 https://www.easyocr.cn$request_uri;
        }
        # 跳转到https
        #return 301 https://www.easyocr.cn$request_uri;

        # Load configuration files for the default server block.
        #include /etc/nginx/default.d/*.conf;

        # location / {
        # }

        # location /static {
        #     alias /home/ocr/ocr-web/static;
        # }

        # location /ocr {
        #     proxy_pass http://127.0.0.1:8000/ocr;
        # }

        # error_page 404 /404.html;
        # location = /40x.html {
        # }

        # error_page 500 502 503 504 /50x.html;
        # location = /50x.html {
        # }
}

# server {
#         listen       80;
#         listen       [::]:80;
#         server_name  www.easyocr.cn;
#         root         /home/ocr/ocr-web;
        
#         access_log /home/ocr/nginx/log/ocr-nginx-access.log main;
#         error_log /home/ocr/nginx/log/ocr-nginx-error.log;
        
#         gzip on;
#         gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css image/svg+xml;
#         # 启用后，nginx首先检查是否存在请求静态文件的gz结尾的文件，如果有则直接返回该gz文件内容。为了要兼容不支持gzip的浏览器，启用gzip_static模块就必须同时保留原始静态文件和gz文件
#         gzip_static on;
        
#         # 跳转到https
#         return 301 https://$server_name$request_uri;
# }

server {
        listen       443 ssl default_server;
        listen       [::]:443 default_server;
        server_name  www.easyocr.cn;
        root         /home/ocr/ocr-web;
        
        access_log /home/ocr/nginx/log/ocr-nginx-access.log main;
        error_log /home/ocr/nginx/log/ocr-nginx-error.log;
        
        gzip on;
        gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
        gzip_static on;
        
        ssl on;
        ssl_certificate /home/ocr/.acme.sh/easyocr.cn/fullchain.cer;
        ssl_certificate_key /home/ocr/nginx/ssl/easyocr.cn.key;
        #ssl_dhparam /etc/ssl/certs/dhparams.pem;
        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!MD5;
        
        # Load configuration files for the default server block.
        #include /etc/nginx/default.d/*.conf;
        index index.html; 

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api/v1/ocr {
            proxy_pass http://127.0.0.1:8081/api/v1/ocr;
        }

        location = /robots.txt {
            alias /home/ocr/ocr-web/robots.txt;
        }

        location = /sitemap.xml {
            alias /home/ocr/ocr-web/sitemap.xml;
        }
        
        error_page 404 /404.html;
        location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
}

server {
        listen       443 ssl;
        listen       [::]:443;
        server_name  easyocr.cn;
        
        location = /robots.txt {
            alias /home/ocr/ocr-web/robots.txt;
        }

        location = /sitemap.xml {
            alias /home/ocr/ocr-web/sitemap.xml;
        }
        
        location / {
            return 301 https://www.easyocr.cn$request_uri;
        }
}