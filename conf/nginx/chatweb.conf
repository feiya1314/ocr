server {
        listen       80;
        listen       [::]:80;
        server_name  chat.easyocr.cn www.easyocr.cn easyocr.cn;
        root         /home/ocr/ai-chat/chat-web;

        access_log /home/ocr/nginx/log/ocr-nginx-access.log ocr_log;
        error_log /home/ocr/nginx/log/ocr-nginx-error.log;

        gzip on;
        gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css image/svg+xml;
        # 启用后，nginx首先检查是否存在请求静态文件的gz结尾的文件，如果有则直接返回该gz文件内容。为了要兼容不支持gzip的浏览器，启用gzip_static模块就必须同时保留原始静态文件和gz文件
        gzip_static on;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Real-Port $remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location = /robots.txt {
            alias /home/ocr/ocr-web/robots.txt;
        }

        location = /sitemap.xml {
            alias /home/ocr/ocr-web/sitemap.xml;
        }

        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-Port $remote_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            return 301 https://chat.easyocr.cn$request_uri;
        }
        # 跳转到https
        #return 301 https://www.easyocr.cn$request_uri;
}

server {
        listen       443 ssl;
        listen       [::]:443;
        server_name  www.easyocr.cn easyocr.cn;

        access_log /home/ocr/nginx/log/ocr-nginx-access.log ocr_log;
        error_log /home/ocr/nginx/log/ocr-nginx-error.log;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Real-Port $remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location = /robots.txt {
            alias /home/ocr/nginx/robots.txt;
        }

        location = /sitemap.xml {
            alias /home/ocr/nginx/sitemap.xml;
        }

        location / {
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Real-Port $remote_port;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

           return 301 https://chat.easyocr.cn$request_uri;
        }

        #location ^~ /chat/auth/v1/wx {
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_set_header X-Real-Port $remote_port;
        #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#
        #    # 代理到/chat/auth/v1/wx
        #    proxy_pass http://127.0.0.1:3004$request_uri;
        #}
#
        #location ^~ /api/v1/auth/wx {
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_set_header X-Real-Port $remote_port;
        #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#
        #    set $var "";
        #    if ($request_uri ~* "^/api/v1/auth/(.*)") {
        #         set $var $1;
        #    }
#
        #    # 代理到/chat/auth/v1/
        #    proxy_pass http://127.0.0.1:3004/chat/auth/v1/$var;
        #}
}

server {
        listen       443 ssl default_server;
        listen       [::]:443 default_server;
        server_name  chat.easyocr.cn;
        root         /home/ocr/ai-chat/chat-web;

        access_log /home/ocr/nginx/log/ocr-nginx-access.log ocr_log;
        error_log /home/ocr/nginx/log/ocr-nginx-error.log;

        gzip on;
        # gzip 压缩类型
        gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
        gzip_static on;

        ssl_certificate /home/ocr/nginx/ssl/fullchain.cer;
        ssl_certificate_key /home/ocr/nginx/ssl/easyocr.cn.key;
        #ssl_dhparam /etc/ssl/certs/dhparams.pem;
        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Load configuration files for the default server block.
        #include /etc/nginx/default.d/*.conf;
        index index.html;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Real-Port $remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location ^~ /api/v1/chat-process {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Real-Port $remote_port;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                proxy_buffering off;
                proxy_cache off;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";

                # 流式输出
                # 开启分块传输编码
                chunked_transfer_encoding on;
                # 开启TCP NOPUSH选项，禁止Nagle算法
                tcp_nopush on;
                # 开启TCP NODELAY选项，禁止延迟ACK算法
                tcp_nodelay on;
                # 设定keep-alive超时时间为60秒
                keepalive_timeout 300;
                # 代理到/chat/api/v1/
                proxy_pass http://127.0.0.1:3002/chat/api/v1/chat-process;
        }

        location ^~ /api/v1/ {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-Port $remote_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # 代理到/chat/api/v1/
            proxy_pass http://127.0.0.1:3002/chat$request_uri;
        }

        location ^~ /api/auth/v1/wx {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Real-Port $remote_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            set $var "";
            if ($request_uri ~* "^/api/auth/v1/(.*)") {
                 set $var $1;
            }

            # 代理到/chat/auth/v1/
            proxy_pass http://127.0.0.1:3002/chat/auth/v1/$var;
        }

        location = /robots.txt {
            alias /home/ocr/nginx/robots.txt;
        }

        location = /sitemap.xml {
            alias /home/ocr/nginx/sitemap.xml;
        }

        error_page 404 /404.html;
        location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
}

